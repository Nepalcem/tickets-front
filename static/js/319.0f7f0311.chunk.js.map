{"version":3,"file":"static/js/319.0f7f0311.chunk.js","mappings":"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","sources":["components/SignupForm/SignupForm.styled.js","components/SignupForm/SignupForm.jsx","components/pages/Login/Login.jsx","components/pages/Signup/Signup.styled.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const ForgotPasswordNav = styled(NavLink)`\n  cursor: pointer;\n  color: #b29f7e;\n  font-size: 14px;\n  line-height: 22px;\n  align-self: flex-end;\n  margin-top: -10px;\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  & .form-center-align {\n    align-self: center;\n  }\n  & .blue-regular-text {\n    font-size: 14px;\n    line-height: 22px;\n    cursor: pointer;\n    color: #172234;\n  }\n`;\nexport const ErrorMessageStyled = styled.div`\n  font-size: 14px;\n  line-height: calc(14 / 12);\n  color: #da1414;\n`;\nexport const FormField = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 3px;\n  & label {\n    font-size: 14px;\n    font-weight: 700;\n    font-family: Merriweather;\n    line-height: 20px;\n  }\n  & input {\n    font-family: Lato;\n    font-size: 14px;\n    line-height: 22px;\n    width: 308px;\n    padding: 14px 20px 12px 20px;\n    background-color: #e0e0e0;\n    outline: none;\n    border: unset;\n    color: #172234;\n    border-radius: 5px;\n    /* border: 1px solid\n      ${(props) =>\n      props.isvalid\n        ? \"green\"\n        : props.isvalid === false\n        ? \"red\"\n        : \"transparent\"}; */\n    color: #172234;\n  }\n  & input::placeholder {\n    /* font-size: 14px;\n    font-family: Lato;\n    line-height: 22px;\n    color: #172234; */\n  }\n`;\n\nexport const SignupButton = styled.button`\n  background-color: #b29f7e;\n  outline: none;\n  border: unset;\n  border-radius: 5px;\n  padding: 11px 0;\n  cursor: pointer;\n  color: #fff;\n  transition: all 0.3s ease-in-out;\n  font-size: 16px;\n  line-height: 22px;\n  font-weight: 700;\n  font-family: Merriweather;\n  margin-top: 30px;\n  &:hover {\n    background-color: #172234;\n  }\n`;\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  StyledForm,\n  FormField,\n  ErrorMessageStyled,\n  SignupButton,\n  ForgotPasswordNav\n} from \"./SignupForm.styled\";\n\n\nconst SignupForm = ({ isLogin, onSubmit }) => {\n  const validationSchema = isLogin\n    ? Yup.object({\n        email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n        password: Yup.string()\n          .min(8, \"Must be at least 8 characters\")\n          .required(\"Required\"),\n      })\n    : Yup.object({\n        username: Yup.string()\n          .min(3, \"Must be at least 3 characters\")\n          .required(\"Required\"),\n        email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n        password: Yup.string()\n          .min(8, \"Must be at least 8 characters\")\n          .required(\"Required\"),\n      });\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema,\n    onSubmit: (values, actions) => {\n      onSubmit(values, actions);\n    },\n  });\n\n  return (\n    <StyledForm onSubmit={formik.handleSubmit}>\n      {!isLogin && (\n        <FormField>\n          <label htmlFor=\"username\">Username</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            placeholder=\"Username\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.username}\n          />\n          {formik.touched.username && formik.errors.username ? (\n            <ErrorMessageStyled>{formik.errors.username}</ErrorMessageStyled>\n          ) : null}\n        </FormField>\n      )}\n      <FormField\n      // isvalid={\n      //   formik.touched.email &&\n      //   !formik.errors.email &&\n      //   formik.errors.email !== \"\"\n      // }\n      >\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.email}\n        />\n        {formik.touched.email && formik.errors.email ? (\n          <ErrorMessageStyled>{formik.errors.email}</ErrorMessageStyled>\n        ) : null}\n      </FormField>\n      <FormField>\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        />\n        {formik.touched.password && formik.errors.password ? (\n          <ErrorMessageStyled>{formik.errors.password}</ErrorMessageStyled>\n        ) : null}\n      </FormField>\n      {isLogin && (\n        <p className=\"forgot-password\">\n          <span>Forgot password?</span>\n        </p>\n      )}\n      <SignupButton type=\"submit\">{isLogin ? \"Login\" : \"Signup\"}</SignupButton>\n      {isLogin && (\n        <p className=\"form-center-align\">\n          <span className=\"blue-regular-text\"> Donâ€™t have account? </span>\n          <span className=\"forgot-password\">\n            <ForgotPasswordNav to=\"/signup\">Sign Up</ForgotPasswordNav>\n          </span>\n        </p>\n      )}\n    </StyledForm>\n  );\n};\n\nexport default SignupForm;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { SignUpMain, SignupImage, FormBlock } from \"../Signup/Signup.styled\";\nimport SignUpBackground from \"../../images/signup-image.jpg\";\nimport SignupForm from \"../../SignupForm/SignupForm\";\nimport authOperations from \"../../redux/auth/authOperations\";\n\n\nexport default function LogIn() {\n  const dispatch = useDispatch();\n\n  const handleLoginSubmit = (values, actions) => {\n    const { email, password } = values;\n    dispatch(authOperations.logIn({ email, password }));\n    actions.resetForm();\n  };\n\n  return (\n    <SignUpMain>\n      <div className=\"main-container\">\n        <SignupImage src={SignUpBackground} alt=\"hero-background\" />\n        <FormBlock>\n          <h2 className=\"login-title\">Login</h2>\n          <SignupForm isLogin={true} onSubmit={handleLoginSubmit} />\n        </FormBlock>\n      </div>\n    </SignUpMain>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const SignupImage = styled.img`\n  display: inline-block;\n`;\n\nexport const SignUpMain = styled.main`\n  & .main-container {\n    margin: 0 auto;\n    max-width: 1440px;\n    display: flex;\n  }\n`;\nexport const FormBlock = styled.div`\npadding: 255px 100px;\n  & .login-title {\n    font-size: 28px;\n    color: #172234;\n    font-weight: 700;\n    font-family: Merriweather;\n    line-height: 34px;\n    margin-bottom: 20px;\n  }\n`;\n"],"names":["ForgotPasswordNav","styled","NavLink","_templateObject","_taggedTemplateLiteral","StyledForm","form","_templateObject2","ErrorMessageStyled","div","_templateObject3","FormField","_templateObject4","props","isvalid","SignupButton","button","_templateObject5","_ref","isLogin","onSubmit","validationSchema","Yup","email","required","password","min","username","formik","useFormik","initialValues","values","actions","_jsxs","handleSubmit","children","_jsx","htmlFor","type","id","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors","className","to","LogIn","dispatch","useDispatch","SignUpMain","SignupImage","src","SignUpBackground","alt","FormBlock","SignupForm","authOperations","logIn","resetForm","img","main"],"sourceRoot":""}