{"version":3,"file":"static/js/751.1d9120c5.chunk.js","mappings":"oMAEaA,EAAcC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oCAIxBC,EAAaJ,EAAAA,GAAOK,KAAIC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,uGAOxBI,EAAYP,EAAAA,GAAOQ,IAAGC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6J,yFCmEnC,EA5EmB,WACjB,IAAMO,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,SAAU,GACVC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,EAAAA,GAAW,CAC3BJ,SAAUI,EAAAA,KACPC,IAAI,EAAG,iCACPC,SAAS,YACZL,MAAOG,EAAAA,KAAaH,MAAM,yBAAyBK,SAAS,YAC5DJ,SAAUE,EAAAA,KACPC,IAAI,EAAG,iCACPC,SAAS,cAEdC,SAAU,SAACC,GACTC,MAAMC,KAAKC,UAAUH,EAAQ,KAAM,GACrC,IAGF,OACEI,EAAAA,EAAAA,MAAA,QAAML,SAAUV,EAAOgB,aAAaC,SAAA,EAClCF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAUF,SAAC,eAC1BC,EAAAA,EAAAA,KAAA,SACEE,KAAK,OACLC,GAAG,WACHC,KAAK,WACLC,YAAY,sBACZC,SAAUxB,EAAOyB,aACjBC,OAAQ1B,EAAO2B,WACfC,MAAO5B,EAAOW,OAAOR,WAEtBH,EAAO6B,QAAQ1B,UAAYH,EAAO8B,OAAO3B,UACxCe,EAAAA,EAAAA,KAAA,OAAAD,SAAMjB,EAAO8B,OAAO3B,WAClB,SAGNY,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,QAAOF,SAAC,YACvBC,EAAAA,EAAAA,KAAA,SACEE,KAAK,QACLC,GAAG,QACHC,KAAK,QACLC,YAAY,mBACZC,SAAUxB,EAAOyB,aACjBC,OAAQ1B,EAAO2B,WACfC,MAAO5B,EAAOW,OAAOP,QAEtBJ,EAAO6B,QAAQzB,OAASJ,EAAO8B,OAAO1B,OACrCc,EAAAA,EAAAA,KAAA,OAAAD,SAAMjB,EAAO8B,OAAO1B,QAClB,SAGNW,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAUF,SAAC,eAC1BC,EAAAA,EAAAA,KAAA,SACEE,KAAK,WACLC,GAAG,WACHC,KAAK,WACLC,YAAY,sBACZC,SAAUxB,EAAOyB,aACjBC,OAAQ1B,EAAO2B,WACfC,MAAO5B,EAAOW,OAAON,WAEtBL,EAAO6B,QAAQxB,UAAYL,EAAO8B,OAAOzB,UACxCa,EAAAA,EAAAA,KAAA,OAAAD,SAAMjB,EAAO8B,OAAOzB,WAClB,SAGNa,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAAQH,SAAC,aAG5B,ECzEe,SAASc,IACtB,OACEb,EAAAA,EAAAA,KAACxB,EAAU,CAAAuB,UACTF,EAAAA,EAAAA,MAAA,OAAKiB,UAAU,iBAAgBf,SAAA,EAC7BC,EAAAA,EAAAA,KAAC7B,EAAW,CAAC4C,IAAKC,EAAkBC,IAAI,qBACxCpB,EAAAA,EAAAA,MAAClB,EAAS,CAAAoB,SAAA,EACRC,EAAAA,EAAAA,KAAA,MAAIc,UAAU,cAAaf,SAAC,cAC5BC,EAAAA,EAAAA,KAACkB,EAAU,WAKrB,C","sources":["components/pages/Signup/Signup.styled.js","components/SignupForm/SignupForm.jsx","components/pages/Signup/Signup.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const SignupImage = styled.img`\n  display: inline-block;\n`;\n\nexport const SignUpMain = styled.main`\n  & .main-container {\n    margin: 0 auto;\n    max-width: 1440px;\n    display: flex;\n  }\n`;\nexport const FormBlock = styled.div`\n  & .login-title {\n    font-size: 28px;\n    color: #172234;\n    font-weight: 700;\n    font-family: Merriweather;\n    line-height: 34px;\n  }\n`;\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst SignupForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: Yup.object({\n      username: Yup.string()\n        .min(3, \"Must be at least 3 characters\")\n        .required(\"Required\"),\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n      password: Yup.string()\n        .min(8, \"Must be at least 8 characters\")\n        .required(\"Required\"),\n    }),\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <div>\n        <label htmlFor=\"username\">Username:</label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          name=\"username\"\n          placeholder=\"Enter your username\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.username}\n        />\n        {formik.touched.username && formik.errors.username ? (\n          <div>{formik.errors.username}</div>\n        ) : null}\n      </div>\n\n      <div>\n        <label htmlFor=\"email\">Email:</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"Enter your email\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.email}\n        />\n        {formik.touched.email && formik.errors.email ? (\n          <div>{formik.errors.email}</div>\n        ) : null}\n      </div>\n\n      <div>\n        <label htmlFor=\"password\">Password:</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          placeholder=\"Enter your password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        />\n        {formik.touched.password && formik.errors.password ? (\n          <div>{formik.errors.password}</div>\n        ) : null}\n      </div>\n\n      <button type=\"submit\">Signup</button>\n    </form>\n  );\n};\n\nexport default SignupForm;\n","import React from \"react\";\nimport { SignUpMain, SignupImage, FormBlock } from \"./Signup.styled\";\nimport SignUpBackground from \"../../images/signup-image.jpg\";\nimport SignupForm from \"../../SignupForm/SignupForm\";\n\nexport default function Signup() {\n  return (\n    <SignUpMain>\n      <div className=\"main-container\">\n        <SignupImage src={SignUpBackground} alt=\"hero-background\" />\n        <FormBlock>\n          <h2 className=\"login-title\">Register</h2>\n          <SignupForm />\n        </FormBlock>\n      </div>\n    </SignUpMain>\n  );\n}\n"],"names":["SignupImage","styled","img","_templateObject","_taggedTemplateLiteral","SignUpMain","main","_templateObject2","FormBlock","div","_templateObject3","formik","useFormik","initialValues","username","email","password","validationSchema","Yup","min","required","onSubmit","values","alert","JSON","stringify","_jsxs","handleSubmit","children","_jsx","htmlFor","type","id","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors","Signup","className","src","SignUpBackground","alt","SignupForm"],"sourceRoot":""}